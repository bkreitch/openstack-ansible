---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Install manila server
  hosts: manila_all
  max_fail_percentage: 20
  user: root
  pre_tasks:
    # - name: Use the lxc-openstack aa profile
    #   lxc_container:
    #     name: "{{ container_name }}"
    #     container_config:
    #       - "lxc.aa_profile=unconfined"
    #   delegate_to: "{{ physical_host }}"
    #   register: container_config
    #   when: >
    #     not is_metal | bool and
    #     inventory_hostname in groups['manila_volume']
    #   tags:
    #     - lxc-aa-profile
    #- name: Add volume group block device to manila
    #  shell: |
    #    {% if item.value.volume_group is defined %}
    #    if [ "$(pvdisplay | grep -B1 {{ item.value.volume_group }} | awk '/PV/ {print $3}')" ];then
    #      for device in `pvdisplay | grep -B1 {{ item.value.volume_group }} | awk '/PV/ {print $3}'`
    #        do lxc-device -n {{ container_name }} add $device
    #      done
    #    fi
    #    {% else %}
    #    echo "{{ item.key }} volume_group not defined"
    #    {% endif %}
    #  with_dict: manila_backends|default({})
    #  when: physical_host != container_name
    #  delegate_to: "{{ physical_host }}"
    #  tags:
    #    - manila-lxc-devices
    # - name: manila volume extra lxc config
    #   lxc_container:
    #     name: "{{ container_name }}"
    #     container_config:
    #       - "lxc.autodev=0"
    #       - "lxc.cgroup.devices.allow=a *:* rmw"
    #       - "lxc.mount.entry=udev dev devtmpfs defaults 0 0"
    #   delegate_to: "{{ physical_host }}"
    #   when: >
    #     not is_metal | bool and
    #     inventory_hostname in groups['manila_volume'] and
    #     manila_backend_lvm_inuse
    #   tags:
    #     - manila-container-setup
    # #   register: lxc_config
    # - name: udevadm trigger
    #   command: udevadm trigger
    #   tags:
    #     - manila-container-setup
    #   delegate_to: "{{ physical_host }}"
    #   when: lxc_config is defined and lxc_config | changed
    # - name: Wait for container ssh
    #   wait_for:
    #     port: "22"
    #     delay: "{{ ssh_delay }}"
    #     search_regex: "OpenSSH"
    #     host: "{{ ansible_ssh_host }}"
    #   delegate_to: "{{ physical_host }}"
    #   when: >
    #         (container_config is defined and container_config | changed) or
    #         (lxc_config is defined and lxc_config | changed)
    #   register: ssh_wait_check
    #   until: ssh_wait_check|success
    #   retries: 3
    #   tags:
    #     - ssh-wait
    # - name: Sort the rabbitmq servers
    #   dist_sort:
    #     value_to_lookup: "{{ container_name }}"
    #     ref_list: "{{ groups['manila_all'] }}"
    #     src_list: "{{ rabbitmq_servers }}"
    #   register: servers
    #   tags:
    #     - always
    # - name: Set rabbitmq servers
    #   set_fact:
    #     rabbitmq_servers: "{{ servers.sorted_list }}"
    #   tags:
    #     - always
    # - name: Create log dir
    #   file:
    #     path: "{{ item.path }}"
    #     state: directory
    #   with_items:
    #     - { path: "/openstack/log/{{ inventory_hostname }}-manila" }
    #   when: is_metal | bool
    #   tags:
    #     - manila-logs
    #     - manila-log-dirs
    # - name: Create log aggregation links
    #   file:
    #     src: "{{ item.src }}"
    #     dest: "{{ item.dest }}"
    #     state: "{{ item.state }}"
    #     force: "yes"
    #   with_items:
    #     - { src: "/openstack/log/{{ inventory_hostname }}-manila", dest: "/var/log/manila", state: "link" }
    #   when: is_metal | bool
    #   tags:
    #     - manila-logs
    # - name: Ensure Rabbitmq vhost
    #   rabbitmq_vhost:
    #     name: "{{ manila_rabbitmq_vhost }}"
    #     state: "present"
    #   delegate_to: "{{ groups['rabbitmq_all'][0] }}"
    #   when:
    #     - inventory_hostname == groups['manila_all'][0]
    #     - groups['rabbitmq_all']|length > 0
    #   tags:
    #     - manila-rabbitmq
    #     - manila-rabbitmq-vhost
    # - name: Ensure rabbitmq user
    #   rabbitmq_user:
    #     user: "{{ manila_rabbitmq_userid }}"
    #     password: "{{ manila_rabbitmq_password }}"
    #     vhost: "{{ manila_rabbitmq_vhost }}"
    #     configure_priv: ".*"
    #     read_priv: ".*"
    #     write_priv: ".*"
    #     state: "present"
    #   delegate_to: "{{ groups['rabbitmq_all'][0] }}"
    #   when:
    #     - inventory_hostname == groups['manila_all'][0]
    #     - groups['rabbitmq_all']|length > 0
    #   tags:
    #     - manila-rabbitmq
    #     - manila-rabbitmq-user
    # - name: Set manila storage bridge (is_metal)
    #   set_fact:
    #     storage_bridge: "{{ 'ansible_' + hostvars[inventory_hostname]['container_networks']['storage_address']['bridge'] | replace('-', '_') }}"
    #   when:
    #     - hostvars[inventory_hostname]['container_networks']['storage_address']['bridge'] is defined
    #     - is_metal | bool
    #   tags:
    #     - manila-config
    # - name: Set manila storage address (is_metal)
    #   set_fact:
    #     storage_address: "{{ hostvars[inventory_hostname][storage_bridge]['ipv4']['address'] }}"
    #   when:
    #     - hostvars[inventory_hostname]['container_networks']['storage_address']['bridge'] is defined
    #     - is_metal | bool
    #   tags:
    #     - manila-config
    # - name: Set manila storage bridge (is_metal no storage network)
    #   set_fact:
    #     storage_address: "{{ ansible_ssh_host }}"
    #   when:
    #     - hostvars[inventory_hostname]['container_networks']['storage_address']['bridge'] is undefined
    #     - is_metal | bool
    #   tags:
    #     - manila-config
    # - name: Set manila storage address (container)
    #   set_fact:
    #     storage_address: "{{ hostvars[inventory_hostname]['container_networks']['storage_address']['address'] }}"
    #   when:
    #     - hostvars[inventory_hostname]['container_networks']['storage_address']['address'] is defined
    #     - not is_metal | bool
    #   tags:
    #     - manila-config
    # - name: Set manila storage address (container no storage network)
    #   set_fact:
    #     storage_address: "{{ ansible_ssh_host }}"
    #   when:
    #     - hostvars[inventory_hostname]['container_networks']['storage_address']['address'] is undefined
    #     - not is_metal | bool
    #   tags:
    #     - manila-config
  roles:
    - role: "os_manila"
      manila_venv_tag: "{{ openstack_release }}"
      manila_venv_download_url: "{{ openstack_repo_url }}/venvs/{{ openstack_release }}/{{ ansible_distribution | lower }}/manila-{{ openstack_release }}.tgz"
      manila_galera_address: "{{ internal_lb_vip_address }}"
      manila_management_address: "{{ ansible_ssh_host }}"
      manila_glance_host: "{{ internal_lb_vip_address }}"
      manila_glance_service_port: "{{ glance_service_port }}"
      tags:
        - "os-manila"
    # - role: "ceph_client"
    #   openstack_service_system_user: "{{ manila_system_user_name }}"
    #   tags:
    #     - "manila-ceph-client"
    #     - "ceph-client"
    # - role: "rsyslog_client"
    #   rsyslog_client_log_rotate_file: manila_log_rotate
    #   rsyslog_client_log_dir: "/var/log/manila"
    #   rsyslog_client_config_name: "99-manila-rsyslog-client.conf"
    #   tags:
    #     - "manila-rsyslog-client"
    #     - "rsyslog-client"
    # - role: "system_crontab_coordination"
    #   tags:
    #     - "system-crontab-coordination"
  vars:
    galera_address: "{{ internal_lb_vip_address }}"
    is_metal: "{{ properties.is_metal|default(false) }}"
    # manila_rabbitmq_userid: manila
    # manila_rabbitmq_vhost: /manila
    # manila_rabbitmq_servers: "{{ rabbitmq_servers }}"
    # manila_rabbitmq_port: "{{ rabbitmq_port }}"
    # manila_rabbitmq_use_ssl: "{{ rabbitmq_use_ssl }}"
